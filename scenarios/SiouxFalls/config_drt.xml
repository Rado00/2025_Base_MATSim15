<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE config SYSTEM "./dtd/config_v2.dtd">

<config>

	<module name="network">
		<param name="inputNetworkFile" value="Siouxfalls_network_PT.xml" />
	</module>

	<module name="plans">
		<param name="inputPlansFile" value="Siouxfalls_population.xml.gz" />
	</module>
	
	<module name="facilities" >
		<param name="inputFacilitiesFile" value="Siouxfalls_facilities.xml.gz" />
		<param name="facilitiesSource" value="fromFile"/>
	</module>
	
	<module name="controler">
		<param name="writeEventsInterval" value="10" />
		<param name="writePlansInterval" value="10" />
		<param name="eventsFileFormat" value="xml" />
		<param name="outputDirectory" value="output/siouxfalls-2014"/>
		<param name="firstIteration" value="0" />
		<param name="lastIteration" value="10" />
		<param name="mobsim" value="qsim" />
	</module>
 	
 	<module name="qsim" >
		<param name="startTime" value="00:00:00" />
		<param name="endTime" value="30:00:00" />
		<param name="flowCapacityFactor" value="1.00" />
		<param name="storageCapacityFactor" value="1.00" />
		<param name="numberOfThreads" value="1" />
		<param name = "snapshotperiod"	value = "00:00:01"/>

		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />

		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="3600.0" />
		<param name="timeStepSize" value="00:00:01" />

		<!-- `queue' for the standard queue model, `withHolesExperimental' (experimental!!) for the queue model with holes -->
		<param name="trafficDynamics" value="queue" />
		
		<!-- add for drt -->
		<param name="simStarttimeInterpretation" value="onlyUseStarttime"/>
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="true"/>
		<param name="snapshotStyle" value="queue"/>
		
	</module>

	<module name="planCalcScore">


		<param name="BrainExpBeta" value="1.0" />
		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />

		<parameterset type="scoringParameters">
		<param name="earlyDeparture" value="0.0" />
		<param name="lateArrival" value="0.0" />
		<param name="marginalUtilityOfMoney" value="0.062" />
		<param name="performing" value="0.96" />
		<param name="utilityOfLineSwitch" value="0.0"/>
		<param name="waitingPt" value="-0.18" />

		<parameterset type="modeParams">
			<param name="mode" value="drt"/>
			<param name="marginalUtilityOfTraveling_util_hr" value="0.0" />
			<param name="constant" value="-0.562"/>
			<param name="monetaryDistanceRate" value="-0.0004"/>
		</parameterset>
		
		<parameterset type="modeParams">
			<param name="mode" value="car"/>
			<param name="marginalUtilityOfTraveling_util_hr" value="0.0" />
			<param name="constant" value="-0.562"/>
			<param name="monetaryDistanceRate" value="-0.0004"/>
		</parameterset>
		<parameterset type="modeParams">
			<param name="mode" value="pt"/>
			<param name="marginalUtilityOfTraveling_util_hr" value="-0.18" />
			<param name="monetaryDistanceRate" value="0.0"/>
			<param name="constant" value="-0.124"/>
		</parameterset>
		<parameterset type="modeParams">
			<param name="mode" value="walk"/>
			<param name="marginalUtilityOfTraveling_util_hr" value="-1.14" />
			<param name="constant" value="0.0"/>
			<param name="marginalUtilityOfDistance_util_m" value="0.0"/>
		</parameterset>

		<parameterset type="activityParams">
			<param name="activityType"    value="home" /> <!-- home -->
			<param name="priority"        value="1" />
			<param name="typicalDuration" value="13:00:00" />
			<param name="minimalDuration" value="01:00:00" />
		</parameterset>
		<parameterset type="activityParams">
			<param name="activityType"            value="work" />
			<param name="priority"        value="1" />
			<param name="typicalDuration" value="09:00:00" />
			<param name="minimalDuration" value="08:00:00" />
			<param name="openingTime"     value="08:00:00" />
			<param name="earliestEndTime" value="17:00:00" />
			<param name="latestStartTime" value="09:00:00" />
			<param name="closingTime"     value="18:00:00" />
		</parameterset>

		<parameterset type="activityParams">
			<param name="activityType"            value="secondary" />
			<param name="priority"        value="1" />
			<param name="typicalDuration" value="01:00:00" />
			<param name="minimalDuration" value="00:30:00" />
			<param name="openingTime"     value="08:00:00" />
			<param name="closingTime"     value="20:00:00" />
		</parameterset>
		</parameterset>
	</module>
	
	<module name="strategy">
		<param name="maxAgentPlanMemorySize" value="6" /> <!-- 0 means unlimited -->

		<parameterset type="strategysettings">
			<param name="strategyName" value="ChangeExpBeta"/>
			<param name="weight" value="0.7"/>
		</parameterset>

		<parameterset type="strategysettings">
			<param name="strategyName" value="ReRoute"/>
			<param name="disableAfterIteration" value="2900" />
			<param name="weight" value="0.01"/>
		</parameterset>

		<parameterset type="strategysettings">
			<param name="strategyName" value="SubtourModeChoice"/>
			<param name="disableAfterIteration" value="2900" />
			<param name="weight" value="0.01"/>
		</parameterset>

		<parameterset type="strategysettings">
			<param name="strategyName" value="TimeAllocationMutator"/>
			<param name="disableAfterIteration" value="2900" />
			<param name="weight" value="0.01"/>
		</parameterset>
	</module>
	
<!-- ====================================================================== -->

	<module name="TimeAllocationMutator" >
		<param name="mutationRange" value="3600.00" />
	</module>

<!-- ====================================================================== -->

	<module name="transitRouter" >

		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />

		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="500.0" />

		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="300.0" />

		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1500.0" />
	</module>

	
	<module name="subtourModeChoice" >

		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car" />

		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="true" />

		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,walk" />
	</module>
   
  	<module name="transit">
  	  	<param name="useTransit" value="true" />
  	  		<param name="transitScheduleFile" value="Siouxfalls_transitSchedule.xml" />
 		<param name="vehiclesFile" value="Siouxfalls_vehicles.xml" />
  	 	<param name="transitModes" value="pt,bus" />
  	</module>
  	
  	<module name="dvrp">
	</module>
	
	<module name="multiModeDrt" >
		<parameterset type="drt" >
			<!-- If true, the startLink is changed to last link in the current schedule, so the taxi starts the next day at the link where it stopped operating the day before. False by default. -->
			<param name="changeStartLinkToLastLinkInSchedule" value="false" />
			<!-- allows to configure a service area per drt mode.Used with serviceArea Operational Scheme -->
			<param name="drtServiceAreaShapeFile" value="null" />
			<!-- Idle vehicles return to the nearest of all start links. See: DvrpVehicle.getStartLink() -->
			<param name="idleVehiclesReturnToDepots" value="false" />
			<!-- Defines the slope of the maxTravelTime estimation function (optimisation constraint), i.e. maxTravelTimeAlpha * unsharedRideTime + maxTravelTimeBeta. Alpha should not be smaller than 1. -->
			<param name="maxTravelTimeAlpha" value="1.5" />
			<!-- Defines the shift of the maxTravelTime estimation function (optimisation constraint), i.e. maxTravelTimeAlpha * unsharedRideTime + maxTravelTimeBeta. Beta should not be smaller than 0. -->
			<param name="maxTravelTimeBeta" value="240.0" />
			<!-- Max wait time for the bus to come (optimisation constraint). -->
			<param name="maxWaitTime" value="600.0" />
			<!-- Maximum beeline distance (in meters) to next stop location in stopbased system for access/egress walk leg to/from drt. If no stop can be found within this maximum distance will return null (in most cases caught by fallback routing module). -->
			<param name="maxWalkDistance" value="1.7976931348623157E308" />
			<!-- Mode which will be handled by PassengerEngine and VrpOptimizer (passengers'/customers' perspective) -->
			<param name="mode" value="drt" />
			<!-- Number of threads used for parallel evaluation of request insertion into existing schedules. Scales well up to 4, due to path data provision, the most computationally intensive part, using up to 4 threads. Default value is 'min(4, no. of cores available to JVM)' -->
			<param name="numberOfThreads" value="1" />
			<!-- Operational Scheme, either of door2door, stopbased or serviceAreaBased. door2door by default -->
			<param name="operationalScheme" value="door2door" />
			<!-- If true, the max travel and wait times of a submitted request are considered hard constraints (the request gets rejected if one of the constraints is violated). If false, the max travel and wait times are considered soft constraints (insertion of a request that violates one of the constraints is allowed, but its cost is increased by additional penalty to make it relatively less attractive). Penalisation of insertions can be customised by injecting a customised InsertionCostCalculator.PenaltyCalculator -->
			<param name="rejectRequestIfMaxWaitOrTravelTimeViolated" value="true" />
			<!-- Bus stop duration. Must be positive. -->
			<param name="stopDuration" value="30.0" />
			<!-- Stop locations file (transit schedule format, but without lines) for DRT stops. Used only for the stopbased mode -->
			<param name="transitStopFile" value="null" />
			<!-- Limit the operation of vehicles to links (of the 'dvrp_routing' network) with 'allowedModes' containing this 'mode'. For backward compatibility, the value is set to false by default - this means that the vehicles are allowed to operate on all links of the 'dvrp_routing' network. The 'dvrp_routing' is defined by DvrpConfigGroup.networkModes) -->
			<param name="useModeFilteredSubnetwork" value="false" />
			<!-- An XML file specifying the vehicle fleet. The file format according to dvrp_vehicles_v1.dtd -->
			<param name="vehiclesFile" value="drt_vehicles_100_4.xml" />
			<!-- Writes out detailed DRT customer stats in each iteration. True by default. -->
			<param name="writeDetailedCustomerStats" value="true" />
			
			<parameterset type="ExtensiveInsertionSearch"/>
		</parameterset>
	</module>

	
</config>